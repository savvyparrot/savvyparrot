{
  "name": "protractor",
  "description": "Webdriver E2E test wrapper for Angular.",
  "homepage": "https://github.com/juliemr/protractor",
  "keywords": [
    "angular",
    "test",
    "testing",
    "webdriver",
    "webdriverjs",
    "selenium"
  ],
  "author": {
    "name": "Julie Ralph",
    "email": "ju.ralph@gmail.com"
  },
  "dependencies": {
    "selenium-webdriver": ">2.32.1",
    "minijasminenode": "~0.2.0",
    "saucelabs": "~0.1.0",
    "adm-zip": ">=0.4.2"
  },
  "devDependencies": {
    "expect.js": "~0.2.0",
    "jasmine-node": "~1.9.0",
    "mocha": "~1.10.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/juliemr/protractor.git"
  },
  "bin": {
    "protractor": "bin/protractor"
  },
  "main": "lib/protractor.js",
  "scripts": {
    "test": "node lib/cli.js conf.js"
  },
  "version": "0.6.1",
  "readme": "Protractor\n==========\n\nProtractor is an end to end test framework for Angular applications built on top of [webdriverJS](https://code.google.com/p/selenium/wiki/WebDriverJs). \n\nProtractor can be run as a standalone binary runner, or included into your tests as a library. Use Protractor as a library if you would like to manage WebDriver and your test setup yourself.\n\n\nTo run the sample tests\n-----------------------\n\nInstall protractor with.\n\n    npm install protractor\n\nStart up a selenium server (See the appendix below for help with this). By default, the tests expect the selenium server to be running at `http://localhost:4444/wd/hub`.\n\nThe example folder contains multiple versions of a simple test suite which runs against angularjs.org. \n\n`onJasmineNodeSpec.js` and `onMocha.js` show how to use the Protractor library with jasmine-node and mocha. Run these with:\n\n    jasmine-node example/onJasmineNodeSpec.js\n    mocha example/onMocha.js\n\nYou can also run the example suite using the Protractor runner. The runner accepts a configuration file, which runs the tests at `example/onProtractor.js`.\n\n    bin/protractor example/protractorConf.js\n\n\nUsing the Protractor runner\n---------------------------\n\nThe Protractor runner is a binary which accepts a config file. The Protractor runner runs tests written in Jasmine, but other adapters may be added in the future.\n\nInstall protractor with\n\n    npm install protractor\n\nCreate a configuration file - an example is shown in `node_modules/protractor/conf.js`.\n\n    cp node_modules/protractor/conf.js myConf.js\n\nEdit the configuration file to point to your tests.\n\n    exports.config = {\n      jasmineNodeOpts: {\n        specs: ['myTest.js', 'myFolder/myOtherTest.js']\n      }\n    }\n\nThe configuration file must also specify a way of connection to webdriver. This can be\n *   `seleniumAddress`: The address of a running selenium standalone server.\n *   `seleniumServerJar`: The location of the selenium standalone .jar file on your machine. Protractor will use this to start up the selenium server.\n *   `sauceUser` and `sauceKey`: The username and key for a [SauceLabs](http://www.saucelabs.com) account. Protractor will use this to run tests on SauceLabs.\n\nRun with\n\n    node_modules/.bin/protractor myConf.js\n\nOr, if you installed protractor globally (using `npm install -g protractor`)\n\n    protractor myConf.js\n\n\nUsing the Protractor library\n----------------------------\n\nUse the Protractor library if you would like to manage webdriverJs yourself.\n\nInstall protractor with\n\n    npm install protractor\n\nIn your test, set up a webdriver instance, then wrap it with protractor.\n\n    var protractor = require('protractor');\n    var driver;\n    // Set up driver as a webdriver however you'd like.\n    var ptor = protractor.wrapDriver(driver);\n\n\nCloning and running Protractor's own tests\n------------------------------------------\nClone the github repository.\n\n    git clone https://github.com/juliemr/protractor.git\n    cd protractor\n    npm install\n\nStart up a selenium server. By default, the tests expect the selenium server to be running at `http://localhost:4444/wd/hub`.\n\nProtractor's test suite runs against the included testapp. Start that up with\n\n    cd testapp\n    scripts/web-server.js\n\nThen run the tests with\n\n    bin/protractor conf.js\n\n\nAppendix A: Setting up a standalone selenium server\n---------------------------------------------------\n\nWebdriverJS does not natively include the selenium server - you must start a standalone selenium server. All you need is the latest [selenium-server-standalone.](https://code.google.com/p/selenium/downloads/list)\n\nTo use with chrome browsers, [download chromedriver](https://code.google.com/p/chromedriver/downloads/list).\n[More information about chromedriver](https://code.google.com/p/selenium/wiki/ChromeDriver)\n\nA script is included to do the download for you - run with (add the --nocd option if you do not want to install ChromeDriver)\n\n    ./node_modules/protractor/bin/install_selenium_standalone\n\nStart the selenium standalone with \n\n    java -jar selenium/selenium-server-standalone-2.33.0.jar -Dwebdriver.chrome.driver=./selenium/chromedriver\n",
  "readmeFilename": "README.md",
  "_id": "protractor@0.6.1",
  "_from": "protractor@0.6.1"
}
